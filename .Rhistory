lines(dis.grid, preds$fit)
plot(Boston$dis, Boston$nox)
lines(dis.grid, preds$fit)
plot(Boston$dis, Boston$nox)
for (i in 1:10){
poly.fit <- lm(nox~poly(dis,i), data = Boston)
preds=predict(poly.fit,newdata=list(dis=dis.grid),se=TRUE)
lines(dis.grid, preds$fit)
}
par(mfrow = c(5,2))
for (i in 1:10){
poly.fit <- lm(nox~poly(dis,i), data = Boston)
preds=predict(poly.fit,newdata=list(dis=dis.grid),se=TRUE)
plot(Boston$dis, Boston$nox)
title(main = "Degree", sub = i)
lines(dis.grid, preds$fit)
}
par(mfrow = c(2,2))
for (i in 1:4){
poly.fit <- lm(nox~poly(dis,i), data = Boston)
preds=predict(poly.fit,newdata=list(dis=dis.grid),se=TRUE)
plot(Boston$dis, Boston$nox)
title(main = "Degree", sub = i)
lines(dis.grid, preds$fit)
}
par(mfrow = c(2,2))
for (i in 1:4){
poly.fit <- lm(nox~poly(dis,i), data = Boston)
preds=predict(poly.fit,newdata=list(dis=dis.grid),se=TRUE)
deg <- sprintf("Degree %s", i)
plot(Boston$dis, Boston$nox, main = deg)
lines(dis.grid, preds$fit)
}
summary(poly.fit)
par(mfrow = c(2,2))
for (i in 1:4){
poly.fit <- lm(nox~poly(dis,i), data = Boston)
preds=predict(poly.fit,newdata=list(dis=dis.grid),se=TRUE)
deg <- sprintf("Degree %s", i)
plot(Boston$dis, Boston$nox, main = deg)
lines(dis.grid, preds$fit)
sum(resid(poly.fit)^2)
}
rss.list <- list()
rss.list <- list()
par(mfrow = c(2,2))
for (i in 1:10){
poly.fit <- lm(nox~poly(dis,i), data = Boston)
preds=predict(poly.fit,newdata=list(dis=dis.grid),se=TRUE)
deg <- sprintf("Degree %s", i)
plot(Boston$dis, Boston$nox, main = deg)
lines(dis.grid, preds$fit)
rss.list[i] <- sum(resid(poly.fit)^2)
}
rss.list
unlist(rss.list)
as.data.frame(unlist(rss.list))
rss.list
unlist(rss.list)
cbind(seq(1:10),unlist(rss.list))
rss.results <- cbind(seq(1:10),unlist(rss.list))
colnames(rss.results) <- c("Degree", "RSS")
rss.results
library(caret)
train_control <- trainControl(method="cv", number=10)
?train
foldid=sample(1:10,size=length(Boston$nox),replace=TRUE)
set.seed(1)
foldid=sample(1:10,size=length(Boston$nox),replace=TRUE)
set.seed(1)
foldid=sample(1:10,size=length(Boston$nox),replace=TRUE)
error.list <- list()
for (i in 1:10){
pred.error <- 0
for (j in 1:10){
poly.fit <- lm(nox~poly(dis,), data = Boston[foldid =! j,])
preds=predict(poly.fit,newdata=Boston[foldid == j,])
pred.error <- pred.error + sum((Boston[foldid =! j,nox] - preds)**2)
error.list[i] <- pred.error
}
}
set.seed(1)
foldid=sample(1:10,size=length(Boston$nox),replace=TRUE)
error.list <- list()
for (i in 1:10){
pred.error <- 0
for (j in 1:10){
poly.fit <- lm(nox~poly(dis,), data = Boston[foldid != j,])
preds=predict(poly.fit,newdata=Boston[foldid == j,])
pred.error <- pred.error + sum((Boston[foldid != j,nox] - preds)**2)
error.list[i] <- pred.error
}
}
set.seed(1)
foldid=sample(1:10,size=length(Boston$nox),replace=TRUE)
error.list <- list()
for (i in 1:10){
pred.error <- 0
for (j in 1:10){
poly.fit <- lm(nox~poly(dis,i), data = Boston[foldid != j,])
preds=predict(poly.fit,newdata=Boston[foldid == j,])
pred.error <- pred.error + sum((Boston[foldid != j,nox] - preds)**2)
error.list[i] <- pred.error
}
}
set.seed(1)
foldid=sample(1:10,size=length(Boston$nox),replace=TRUE)
error.list <- list()
for (i in 1:10){
pred.error <- 0
for (j in 1:10){
poly.fit <- lm(nox~poly(dis,i), data = Boston[foldid != j,])
preds=predict(poly.fit,newdata=Boston[foldid == j,])
pred.error <- pred.error + sum((Boston[foldid != j,"nox"] - preds)**2)
error.list[i] <- pred.error
}
}
set.seed(1)
foldid=sample(1:10,size=length(Boston$nox),replace=TRUE)
error.list <- list()
for (i in 1:10){
pred.error <- 0
for (j in 1:10){
poly.fit <- lm(nox~poly(dis,i), data = Boston[foldid != j,])
preds=predict(poly.fit,newdata=Boston[foldid == j,])
pred.error <- pred.error + sum((Boston[foldid == j,"nox"] - preds)**2)
error.list[i] <- pred.error
}
}
error.list
cv.results <- cbind(seq(1:10),unlist(error.list))
colnames(cv.results) <- c("Degree", "RSS")
cv.results
summary(Boston$dis)
dis.summary <- summary(Boston$dis)
dis.summary[1]
dis.summary[2]
bs.fit=lm(nox~bs(dis,knots=c(dis.summary)),data=Boston)
dis.summary <- quantile(Boston$dis, c(.25, .5, .75))
dis.summary
bs.fit=lm(nox~bs(dis,knots=c(dis.summary)),data=Boston)
?bs
bs.fit=lm(nox~bs(dis,knots=c(dis.summary), df=4),data=Boston)
summary(bs.fit)
plot(Boston$dis, Boston$nox)
pred2=predict(bs.fit,newdata=list(dis=dis.grid),se=T)
lines(dis.grid, pred2$fit,col="red",lwd=2)
smooth.fit=smooth.spline(Boston$dis,Boston$nox,cv=TRUE)
smooth.fit=smooth.spline(Boston$dis,Boston$nox,df=10)
par(mfrow = c(1,1))
smooth.fit=smooth.spline(Boston$dis,Boston$nox,df=10)
plot(Boston$dis, Boston$nox)
lines(smooth.fit,col="red",lwd=2)
smooth.fit=smooth.spline(Boston$dis,Boston$nox,df=10)
plot(Boston$dis, Boston$nox)
lines(smooth.fit,col="red",lwd=2)
smooth.fit1=smooth.spline(Boston$dis,Boston$nox,df=1)
smooth.fit5=smooth.spline(Boston$dis,Boston$nox,df=5)
smooth.fit10=smooth.spline(Boston$dis,Boston$nox,df=10)
smooth.fit5=smooth.spline(Boston$dis,Boston$nox,df=5)
smooth.fit10=smooth.spline(Boston$dis,Boston$nox,df=10)
smooth.fit20=smooth.spline(Boston$dis,Boston$nox,df=20)
plot(Boston$dis, Boston$nox)
lines(smooth.fit5,col="red",lwd=2)
lines(smooth.fit10,col="blue",lwd=2)
lines(smooth.fit20,col="blue",lwd=2)
plot(Boston$dis, Boston$nox)
lines(smooth.fit5,col="red",lwd=2)
lines(smooth.fit10,col="blue",lwd=2)
lines(smooth.fit20,col="green",lwd=2)
summary(smooth.fit5)
plot(Boston$dis, Boston$nox)
lines(smooth.fit5,col="red",lwd=2)
lines(smooth.fit10,col="blue",lwd=2)
lines(smooth.fit20,col="green",lwd=2)
legend("topright",legend=c("df=5","df=10","df=20"),
col=c("red","blue","green"),lty=1,lwd=2,cex=.8)
pred5 <- predict(smooth.fit5)
View(pred5)
pred5 <- predict(smooth.fit5,newdata=Boston$dis)
pred5 <- sum((predict(smooth.fit5,newdata=Boston$dis) - Boston$nox)**2)
predict(smooth.fit5,newdata=Boston$dis)
pred5 <- sum((predict(smooth.fit5,newdata=Boston$dis) - Boston$nox)**2)
Boston$nox
predict(smooth.fit5,newdata=Boston$dis)
(predict(smooth.fit5,newdata=Boston$dis) - Boston$nox)**2
predict(smooth.fit5,newdata=Boston$dis) - Boston$nox
length(Boston$nox)
length(predict(smooth.fit5,newdata=Boston$dis))
View(pred5)
length(predict(smooth.fit5))
pred5 <- predict(smooth.fit5)
rss5 <-  sum((pred5$y- Boston$nox)**2)
knitr::opts_chunk$set(echo = TRUE)
if(!require(ISLR)) { install.packages("ISLR", repos = "http://cran.us.r-project.org"); library("ISLR") }
if(!require(class)) { install.packages("class", repos = "http://cran.us.r-project.org"); library("class") }
if(!require(e1071)) { install.packages("e1071", repos = "http://cran.us.r-project.org"); library("e1071") }
if(!require(splines)) { install.packages("splines", repos = "http://cran.us.r-project.org"); library("splines") }
library(MASS)
dis.summary <- median(Boston$dis)
dis.med <- median(Boston$dis)
bs.fit=lm(nox~bs(dis,knots=c(dis.med), df=4),data=Boston)
summary(bs.fit)
plot(Boston$dis, Boston$nox)
pred2=predict(bs.fit,newdata=list(dis=dis.grid),se=T)
dislims <- range(Boston$dis)
dis.grid=seq(from=dislims[1],to=dislims[2])
pred2=predict(bs.fit,newdata=list(dis=dis.grid),se=T)
plot(Boston$dis, Boston$nox)
pred2=predict(bs.fit,newdata=list(dis=dis.grid),se=T)
lines(dis.grid, pred2$fit,col="red",lwd=2)
bs.fit5=lm(nox~bs(dis,knots=c(dis.med), df=5),data=Boston)
bs.fit10=lm(nox~bs(dis,knots=c(quantile(Boston$dis, c(0.25,0.5,0.75))), df=10),data=Boston)
bs.fit15=lm(nox~bs(dis,knots=c(quantile(Boston$dis, c(0.10,0.2,0.5,0.7,0.9))), df=15),data=Boston)
pred5=predict(bs.fit5,newdata=list(dis=dis.grid),se=T)
pred10=predict(bs.fit10,newdata=list(dis=dis.grid),se=T)
pred15=predict(bs.fit15,newdata=list(dis=dis.grid),se=T)
plot(Boston$dis, Boston$nox)
pred5=predict(bs.fit5,newdata=list(dis=dis.grid),se=T)
pred10=predict(bs.fit10,newdata=list(dis=dis.grid),se=T)
pred15=predict(bs.fit15,newdata=list(dis=dis.grid),se=T)
lines(dis.grid, pred5$fit,col="red",lwd=2)
lines(dis.grid, pred10$fit,col="blue",lwd=2)
lines(dis.grid, pred15$fit,col="green",lwd=2)
legend("topright",legend=c("df=5","df=10","df=15"),
col=c("red","blue","green"),lty=1,lwd=2,cex=.8)
df5.rss <- sum(resid(bs.fit5)^2)
df10.rss <- sum(resid(bs.fit10)^2)
df15.rss <- sum(resid(bs.fit15)^2)
df5.rss <- round(sum(resid(bs.fit5)^2),3)
df10.rss <- round(sum(resid(bs.fit10)^2),3)
df15.rss <- round(sum(resid(bs.fit15)^2),3)
plot(Boston$dis, Boston$nox)
pred5=predict(bs.fit5,newdata=list(dis=dis.grid),se=T)
pred10=predict(bs.fit10,newdata=list(dis=dis.grid),se=T)
pred15=predict(bs.fit15,newdata=list(dis=dis.grid),se=T)
lines(dis.grid, pred5$fit,col="red",lwd=2)
lines(dis.grid, pred10$fit,col="blue",lwd=2)
lines(dis.grid, pred15$fit,col="green",lwd=2)
legend("topright",legend=c("df=5","df=10","df=15"),
col=c("red","blue","green"),lty=1,lwd=2,cex=.8)
set.seed(1)
foldid=sample(1:10,size=length(Boston$nox),replace=TRUE)
?seq
seq(.2,1,by=0.1)
rss.list <- list()
for (i in 10:20){
pred.rss <- 0
for (j in 1:10){
bs.fit <- lm(nox~bs(dis,knots=c(quantile(Boston$dis,c(seq(.2,0.9,by=0.1)))), df=i),
data = Boston[foldid != j,])
preds=predict(bs.fit,newdata=Boston[foldid == j,])
pred.error <- pred.error + sum((Boston[foldid == j,"nox"] - preds)**2)
error.list[i] <- pred.error
}
}
rss.list <- list()
for (i in 10:20){
pred.rss <- 0
for (j in 1:10){
bs.fit <- lm(nox~bs(dis,knots=c(quantile(Boston$dis,c(seq(.2,0.9,by=0.1)))), df=i),
data = Boston[foldid != j,])
preds=predict(bs.fit,newdata=Boston[foldid == j,])
pred.rss <- pred.rss + sum((Boston[foldid == j,"nox"] - preds)**2)
rss.list[i] <- pred.rss
}
}
rss.list <- list()
for (i in 10:20){
pred.rss <- 0
for (j in 1:10){
bs.fit <- lm(nox~bs(dis,knots=c(quantile(Boston$dis,c(seq(.2,0.8,by=0.2)))), df=i),
data = Boston[foldid != j,])
preds=predict(bs.fit,newdata=Boston[foldid == j,])
pred.rss <- pred.rss + sum((Boston[foldid == j,"nox"] - preds)**2)
rss.list[i] <- pred.rss
}
}
rss.list <- list()
for (i in 10:20){
pred.rss <- 0
for (j in 1:10){
bs.fit <- lm(nox~bs(dis,knots=c(quantile(Boston$dis,c(0.25,0.5,0.75))), df=i),
data = Boston[foldid != j,])
preds=predict(bs.fit,newdata=Boston[foldid == j,])
pred.rss <- pred.rss + sum((Boston[foldid == j,"nox"] - preds)**2)
rss.list[i] <- pred.rss
}
}
View(rss.list)
rss.list <- list()
for (i in 10:15){
pred.rss <- 0
for (j in 1:10){
bs.fit <- lm(nox~bs(dis,knots=c(quantile(Boston$dis,c(0.25,0.5,0.75))), df=i),
data = Boston[foldid != j,])
preds=predict(bs.fit,newdata=Boston[foldid == j,])
pred.rss <- pred.rss + sum((Boston[foldid == j,"nox"] - preds)**2)
rss.list[i] <- pred.rss
}
}
View(rss.list)
rss.list <- list()
for (i in 10:15){
pred.rss <- 0
for (j in 1:10){
bs.fit <- lm(nox~bs(dis,knots=c(quantile(Boston$dis,c(0.25,0.5,0.75))), df=i),
data = Boston[foldid != j,])
preds=predict(bs.fit,newdata=Boston[foldid == j,])
pred.rss <- pred.rss + sum((Boston[foldid == j,"nox"] - preds)**2)
rss.list[i-9] <- pred.rss
}
}
View(rss.list)
set.seed(1)
foldid=sample(1:5,size=length(Boston$nox),replace=TRUE)
rss.list <- list()
for (i in 10:15){
pred.rss <- 0
for (j in 1:5){
bs.fit <- lm(nox~bs(dis,knots=c(quantile(Boston$dis,c(0.25,0.5,0.75))), df=i),
data = Boston[foldid != j,])
preds=predict(bs.fit,newdata=Boston[foldid == j,])
pred.rss <- pred.rss + sum((Boston[foldid == j,"nox"] - preds)**2)
rss.list[i-9] <- pred.rss
}
}
View(rss.list)
set.seed(1)
foldid=sample(1:5,size=length(Boston$nox),replace=TRUE)
rss.list <- list()
for (i in 10:15){
pred.rss <- 0
for (j in 1:5){
bs.fit <- lm(nox~bs(dis, df=i),
data = Boston[foldid != j,])
preds=predict(bs.fit,newdata=Boston[foldid == j,])
pred.rss <- pred.rss + sum((Boston[foldid == j,"nox"] - preds)**2)
rss.list[i-9] <- pred.rss
}
}
View(rss.list)
rss.list <- list()
for (i in 5:10){
pred.rss <- 0
for (j in 1:5){
bs.fit <- lm(nox~bs(dis, df=i),
data = Boston[foldid != j,])
preds=predict(bs.fit,newdata=Boston[foldid == j,])
pred.rss <- pred.rss + sum((Boston[foldid == j,"nox"] - preds)**2)
rss.list[i-9] <- pred.rss
}
}
rss.list <- list()
for (i in 5:10){
pred.rss <- 0
for (j in 1:5){
bs.fit <- lm(nox~bs(dis, df=i,intercept = TRUE),
data = Boston[foldid != j,])
preds=predict(bs.fit,newdata=Boston[foldid == j,])
pred.rss <- pred.rss + sum((Boston[foldid == j,"nox"] - preds)**2)
rss.list[i-9] <- pred.rss
}
}
rss.list <- list()
for (i in 5:10){
pred.rss <- 0
for (j in 1:5){
bs.fit <- lm(nox~bs(dis, df=i),
data = Boston[foldid != j,])
preds=predict(bs.fit,newdata=Boston[foldid == j,])
pred.rss <- pred.rss + sum((Boston[foldid == j,"nox"] - preds)**2)
rss.list[i-9] <- pred.rss
}
}
View(rss.list)
rss.list <- list()
for (i in 5:10){
pred.rss <- 0
for (j in 1:5){
bs.fit <- lm(nox~bs(dis, df=i),
data = Boston[foldid != j,])
preds=predict(bs.fit,newdata=Boston[foldid == j,])
pred.rss <- pred.rss + sum((Boston[foldid == j,"nox"] - preds)**2)
rss.list[i-9] <- pred.rss
}
}
View(rss.list)
rss.list <- list()
for (i in 5:10){
pred.rss <- 0
for (j in 1:5){
bs.fit <- lm(nox~bs(dis, df=i),
data = Boston[foldid != j,])
preds=predict(bs.fit,newdata=Boston[foldid == j,])
pred.rss <- pred.rss + sum((Boston[foldid == j,"nox"] - preds)**2)
rss.list[i-4] <- pred.rss
}
}
View(rss.list)
plot(unlist(rss.list))
plot(unlist(rss.list))
unlist(rss.list)
plot(seq(5:10),unlist(rss.list))
seq(5:10)
seq(5,10)
plot(seq(5,10),unlist(rss.list))
plot(seq(5,10),unlist(rss.list))
par(mfrow(c=(1,2)))
par(mfrow = c(1,2))
pairs(~horsepower+displacement+origin+cylinders, data = Auto.train, pch=(16*Auto.train$mpg01), col=(1*Auto.train$mpg01+20))
if(!require(ISLR)) { install.packages("ISLR", repos = "http://cran.us.r-project.org"); library("ISLR") }
if(!require(class)) { install.packages("class", repos = "http://cran.us.r-project.org"); library("class") }
if(!require(e1071)) { install.packages("e1071", repos = "http://cran.us.r-project.org"); library("e1071") }
if(!require(splines)) { install.packages("splines", repos = "http://cran.us.r-project.org"); library("splines") }
library(MASS)
dis.med <- median(Boston$dis)
bs(dis,knots=c(dis.med)
)
bs(Boston$dis,knots=c(dis.med))
banded <- bs(Boston$dis,knots=c(dis.med))
View(banded)
banded <- bs(Boston$dis,df=7)
banded <- bs(Boston$dis,df=10)
banded
library(readr)
bank_additional_full <- read_csv("Documents/STOR_565/Group project/bank-additional/bank-additional-full.csv")
View(bank_additional_full)
library(readr)
bank_additional_full <- read_delim("Documents/STOR_565/Group project/bank-additional/bank-additional-full.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(bank_additional_full)
?lm
?glm
bank_full <- read_delim("Documents/STOR_565/Group project/bank-additional/bank-additional-full.csv",
";", escape_double = FALSE, trim_ws = TRUE)
summary(bank_full$y)
mean(bank_full$y)
bank.additional.full <- read.csv("~/Documents/STOR_565/Group project/bank-additional/bank-additional-full.csv", sep=";")
View(bank.additional.full)
bank.full <- read.csv("~/Documents/STOR_565/Group project/bank-additional/bank-additional-full.csv", sep=";")
summary(bank.full)
library(glmnet)
View(bank.full)
bank.x <- bank.x[,-c("duration")]
bank.x <- bank.full[,-c("duration")]
bank.x <- bank.full[,!colnames(bank.full) %in% c("duration","y")]
x.matrix <- model.matrix(~., bank.x)[,-1]
View(x.matrix)
set.seed(1)
set.seed(1)
foldid=sample(1:10,size=length(bank.full$y),replace=TRUE)
glm.cv =cv.glmnet(x.matrix,bank.full$y,family="binomial",type.measure = "class",foldid=foldid,alpha=1)
plot(glm.cv)
mean(bank.full$y)
mean(bank.full$y=="yes")
act_train <- read.csv("~/Documents/STOR_565/Group project/act_train.csv")
View(act_train)
View(act_train)
people <- read.csv("~/Documents/STOR_565/Group project/people.csv")
View(people)
install.packages("randomForest")
?randomForest
rf.fit <- randomForest(bank.full$y ~ . , data = bank.x, ntree=100)
library(randomForest)
rf.fit <- randomForest(bank.full$y ~ . , data = bank.x, ntree=100)
summary(rf.fit)
rf.fit
rf.fit <- randomForest(bank.full$y ~ . , data = bank.x, ntree=500)
rf.fit
summary(act_train)
summary(bank.full)
mean(bank.full$y=="yes")
plot(glm.cv)
rf.fit
setwd("/Users/michaelbostwick/Documents/Galapagos")
library(tidyverse)
library(ggplot2)
library(readxl)
library(glmnet)
library(mpath)
library(reshape2)
library(gridExtra)
library(leaps)
library(bestsubset)
source("modeling.function.R")
load("BASES_CENSO_UPA_spss/clean_data.RData")
vars <-  read_excel("Variables.xlsx", sheet = "vars", range = "C2:I241")
invasive_include <- vars[which(is.na(vars$`Surface area with invasive species`)),1]$`Variable Name`
invasive_x.df <- subset(reduced_data, select = invasive_include)
reduced_data$invasive <- factor(reduced_data$percinv > 0)
levels(reduced_data$invasive) = c("Zero", "Positive")
invasive_hist <- ggplot(data = reduced_data) + geom_bar(mapping = aes(x = invasive)) +
theme(text = element_text(size=14))
nonzero_hist <- ggplot(data = reduced_data[reduced_data$percinv > 0,], aes(x = percinv)) +
geom_histogram() + stat_bin(binwidth = 10) + theme(text = element_text(size=14))
log_hist <- ggplot(data = reduced_data[reduced_data$percinv > 0,], aes(x = log10(percinv))) +
geom_histogram() + stat_bin(binwidth = 0.25) + theme(text = element_text(size=14))
pdf("Paper/images/invasive_histograms.pdf",width=12,height=8)
grid.arrange(invasive_hist, nonzero_hist, log_hist, nrow = 1)
dev.off()
invasive_binary.models <- fit.models(model.name = "invasive_binary", x.data = invasive_x.df,
y.response = reduced_data$invasive, response.family = "binomial")
log_invasive_nonzero <- log10(reduced_data[reduced_data$percinv > 0.1, 'percinv'])
invasive.matrix <- model.matrix(~., invasive_x.df[reduced_data$percinv > 0.1,])[,-1]
col_vars <- apply(invasive.matrix, 2, var)
zero_variance <- names(col_vars[col_vars == 0])
invasive_x.nonzero <- invasive.matrix[,!colnames(invasive.matrix) %in% zero_variance]
remove_vars <- c("ga15_cualCOMPRA DE ESMERIL", "tp52_g")
invasive_x.nonzero <- as.data.frame(invasive_x.nonzero[,!colnames(invasive_x.nonzero) %in% remove_vars])
invasive_nonzero.models <- fit.models(model.name = "invasive_nonzero", x.data = invasive_x.nonzero,
y.response = log_invasive_nonzero, response.family = "gaussian")
